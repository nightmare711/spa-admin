/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ServicesImport } from './routes/services'
import { Route as NewsImport } from './routes/news'
import { Route as LoginImport } from './routes/login'
import { Route as ContactImport } from './routes/contact'
import { Route as BannerImport } from './routes/banner'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const ServicesRoute = ServicesImport.update({
  path: '/services',
  getParentRoute: () => rootRoute,
} as any)

const NewsRoute = NewsImport.update({
  path: '/news',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const BannerRoute = BannerImport.update({
  path: '/banner',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/banner': {
      id: '/banner'
      path: '/banner'
      fullPath: '/banner'
      preLoaderRoute: typeof BannerImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/news': {
      id: '/news'
      path: '/news'
      fullPath: '/news'
      preLoaderRoute: typeof NewsImport
      parentRoute: typeof rootRoute
    }
    '/services': {
      id: '/services'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof ServicesImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  BannerRoute,
  ContactRoute,
  LoginRoute,
  NewsRoute,
  ServicesRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.ts",
      "children": [
        "/",
        "/banner",
        "/contact",
        "/login",
        "/news",
        "/services"
      ]
    },
    "/": {
      "filePath": "index.ts"
    },
    "/banner": {
      "filePath": "banner.ts"
    },
    "/contact": {
      "filePath": "contact.ts"
    },
    "/login": {
      "filePath": "login.ts"
    },
    "/news": {
      "filePath": "news.ts"
    },
    "/services": {
      "filePath": "services.ts"
    }
  }
}
ROUTE_MANIFEST_END */
